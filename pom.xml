<?xml version="1.0" encoding="UTF-8"?><!--  ~ Copyright (c) 2016 Mashin (http://mashin.io). All Rights Reserved.  ~  ~ Licensed under the Apache License, Version 2.0 (the "License");  ~ you may not use this file except in compliance with the License.  ~ You may obtain a copy of the License at  ~  ~     http://www.apache.org/licenses/LICENSE-2.0  ~  ~ Unless required by applicable law or agreed to in writing, software  ~ distributed under the License is distributed on an "AS IS" BASIS,  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  ~ See the License for the specific language governing permissions and  ~ limitations under the License.  --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  <modelVersion>4.0.0</modelVersion>  <groupId>io.mashin.rich-spark</groupId>  <artifactId>rich-spark-parent_2.11</artifactId>  <packaging>pom</packaging>  <version>0.0.1-SNAPSHOT</version>  <name>Rich Spark Parent POM</name>  <organization>    <url>http://mashin.io</url>    <name>mashin</name>  </organization>  <licenses>    <license>      <name>Apache 2.0 License</name>      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>      <distribution>repo</distribution>    </license>  </licenses>  <scm>    <connection>scm:git:git@github.com:mashin-io/rich-spark.git</connection>    <developerConnection>scm:git:https://github.com/mashin-io/rich-spark.git</developerConnection>    <url>https://github.com/mashin-io/rich-spark/tree/master</url>  </scm>  <developers>    <developer>      <id>ahmed-mahran</id>      <name>Ahmed Mahran</name>      <email>ahmed.mahran@mashin.io</email>      <url>https://www.linkedin.com/in/ahmahran</url>      <organization>Mashin</organization>      <organizationUrl>http://mashin.io</organizationUrl>    </developer>  </developers>  <issueManagement>    <system>github</system>    <url>https://github.com/mashin-io/rich-spark/issues</url>  </issueManagement>  <prerequisites>    <maven>${maven.version}</maven>  </prerequisites>  <modules>    <module>streaming</module>    <module>main</module>  </modules>  <properties>    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>    <java.version>1.8</java.version>    <scala.version>2.11.8</scala.version>    <scala.binary.version>2.11</scala.binary.version>    <spark.version>2.0.0</spark.version>    <maven.version>3.3.9</maven.version>    <sbt.project.name>spark</sbt.project.name>    <rxscala.version>0.26.2</rxscala.version>    <sparkjava.version>2.5</sparkjava.version>    <mesos.version>0.21.1</mesos.version>    <mesos.classifier>shaded-protobuf</mesos.classifier>    <slf4j.version>1.7.16</slf4j.version>    <log4j.version>1.2.17</log4j.version>    <hadoop.version>2.7.0</hadoop.version>    <protobuf.version>2.5.0</protobuf.version>    <yarn.version>${hadoop.version}</yarn.version>    <flume.version>1.6.0</flume.version>    <zookeeper.version>3.4.5</zookeeper.version>    <curator.version>2.4.0</curator.version>    <hive.group>org.spark-project.hive</hive.group>    <!-- Version used in Maven Hive dependency -->    <hive.version>1.2.1.spark2</hive.version>    <!-- Version used for internal directory structure -->    <hive.version.short>1.2.1</hive.version.short>    <derby.version>10.11.1.1</derby.version>    <parquet.version>1.8.1</parquet.version>    <hive.parquet.version>1.6.0</hive.parquet.version>    <jetty.version>9.4.48.v20220622</jetty.version>    <javaxservlet.version>3.1.0</javaxservlet.version>    <chill.version>0.8.0</chill.version>    <ivy.version>2.4.0</ivy.version>    <oro.version>2.0.8</oro.version>    <codahale.metrics.version>3.1.2</codahale.metrics.version>    <avro.version>1.7.7</avro.version>    <avro.mapred.classifier>hadoop2</avro.mapred.classifier>    <jets3t.version>0.7.1</jets3t.version>    <aws.kinesis.client.version>1.6.1</aws.kinesis.client.version>    <!-- the producer is used in tests -->    <aws.kinesis.producer.version>0.10.2</aws.kinesis.producer.version>    <!--  org.apache.httpcomponents/httpclient-->    <commons.httpclient.version>4.5.2</commons.httpclient.version>    <commons.httpcore.version>4.4.4</commons.httpcore.version>    <!--  commons-httpclient/commons-httpclient-->    <httpclient.classic.version>3.1</httpclient.classic.version>    <commons.math3.version>3.4.1</commons.math3.version>    <!-- managed up from 3.2.1 for SPARK-11652 -->    <commons.collections.version>3.2.2</commons.collections.version>    <jline.version>${scala.version}</jline.version>    <jline.groupid>org.scala-lang</jline.groupid>    <codehaus.jackson.version>1.9.13</codehaus.jackson.version>    <fasterxml.jackson.version>2.6.5</fasterxml.jackson.version>    <snappy.version>1.1.2.4</snappy.version>    <netlib.java.version>1.1.2</netlib.java.version>    <calcite.version>1.2.0-incubating</calcite.version>    <commons-codec.version>1.10</commons-codec.version>    <commons-io.version>2.4</commons-io.version>    <!-- org.apache.commons/commons-lang/-->    <commons-lang2.version>2.6</commons-lang2.version>    <!-- org.apache.commons/commons-lang3/-->    <commons-lang3.version>3.3.2</commons-lang3.version>    <datanucleus-core.version>3.2.10</datanucleus-core.version>    <janino.version>2.7.8</janino.version>    <jersey.version>2.22.2</jersey.version>    <joda.version>2.9.3</joda.version>    <jodd.version>3.5.2</jodd.version>    <jsr305.version>1.3.9</jsr305.version>    <libthrift.version>0.9.2</libthrift.version>    <antlr4.version>4.5.3</antlr4.version>    <jpam.version>1.1</jpam.version>    <selenium.version>2.52.0</selenium.version>    <paranamer.version>2.8</paranamer.version>    <maven-antrun.version>1.8</maven-antrun.version>    <test.java.home>${java.home}</test.java.home>    <test.exclude.tags></test.exclude.tags>    <!-- When using different JDKs for the build, we can't use Zinc for the jdk8 part. -->    <useZincForJdk8>true</useZincForJdk8>    <!-- Package to use when relocating shaded classes. -->    <spark.shade.packageName>org.spark_project</spark.shade.packageName>    <!-- Modules that copy jars to the build directory should do so under this location. -->    <jars.target.dir>${project.build.directory}/scala-${scala.binary.version}/jars</jars.target.dir>    <!-- Allow modules to enable / disable certain build plugins easily. -->    <build.testJarPhase>prepare-package</build.testJarPhase>    <build.copyDependenciesPhase>none</build.copyDependenciesPhase>    <!--      Dependency scopes that can be overridden by enabling certain profiles. These profiles are      declared in the projects that build assemblies.      For other projects the scope should remain as "compile", otherwise they are not available      during compilation if the dependency is transivite (e.g. "graphx/" depending on "core/" and      needing Hadoop classes in the classpath to compile).    -->    <flume.deps.scope>compile</flume.deps.scope>    <hadoop.deps.scope>compile</hadoop.deps.scope>    <hive.deps.scope>compile</hive.deps.scope>    <parquet.deps.scope>compile</parquet.deps.scope>    <parquet.test.deps.scope>test</parquet.test.deps.scope>    <!--      Overridable test home. So that you can call individual pom files directly without      things breaking.    -->    <spark.test.home>${project.build.directory}</spark.test.home>    <PermGen>64m</PermGen>    <MaxPermGen>512m</MaxPermGen>    <CodeCacheSize>512m</CodeCacheSize>  </properties>  <repositories>    <repository>      <id>SNAPSHOT</id>      <name>Apache SNAPSHOT Repository</name>      <url>https://repository.apache.org/</url>      <snapshots>        <enabled>true</enabled>      </snapshots>    </repository>  </repositories>  <dependencyManagement>    <dependencies>      <dependency>        <groupId>org.apache.spark</groupId>        <artifactId>spark-core_${scala.binary.version}</artifactId>        <version>${spark.version}</version>        <exclusions>          <exclusion>            <groupId>org.apache.spark</groupId>            <artifactId>spark-streaming_${scala.binary.version}</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.spark</groupId>        <artifactId>spark-mllib_${scala.binary.version}</artifactId>        <version>${spark.version}</version>        <exclusions>          <exclusion>            <groupId>org.apache.spark</groupId>            <artifactId>spark-streaming_${scala.binary.version}</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.spark</groupId>        <artifactId>spark-tags_${scala.binary.version}</artifactId>        <version>${spark.version}</version>      </dependency>      <dependency>        <groupId>io.reactivex</groupId>        <artifactId>rxscala_${scala.binary.version}</artifactId>        <version>${rxscala.version}</version>      </dependency>      <dependency>        <groupId>com.sparkjava</groupId>        <artifactId>spark-core</artifactId>        <version>${sparkjava.version}</version>      </dependency>      <dependency>        <groupId>com.twitter</groupId>        <artifactId>chill_${scala.binary.version}</artifactId>        <version>${chill.version}</version>      </dependency>      <dependency>        <groupId>com.twitter</groupId>        <artifactId>chill-java</artifactId>        <version>${chill.version}</version>      </dependency>      <!-- This artifact is a shaded version of ASM 5.0.4. The POM that was used to produce this           is at https://github.com/apache/geronimo-xbean/tree/xbean-4.4/xbean-asm5-shaded           For context on why we shade ASM, see SPARK-782 and SPARK-6152. -->      <dependency>        <groupId>org.apache.xbean</groupId>        <artifactId>xbean-asm5-shaded</artifactId>        <version>4.4</version>      </dependency>      <!-- Shaded deps marked as provided. These are promoted to compile scope           in the modules where we want the shaded classes to appear in the           associated jar. -->      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-http</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-continuation</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-servlet</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-servlets</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-util</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-security</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-plus</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>org.eclipse.jetty</groupId>        <artifactId>jetty-server</artifactId>        <version>${jetty.version}</version>        <scope>provided</scope>      </dependency>      <dependency>        <groupId>com.google.guava</groupId>        <artifactId>guava</artifactId>        <version>14.0.1</version>        <scope>provided</scope>      </dependency>      <!-- End of shaded deps -->      <dependency>        <groupId>org.apache.commons</groupId>        <artifactId>commons-lang3</artifactId>        <version>${commons-lang3.version}</version>      </dependency>      <dependency>        <groupId>commons-lang</groupId>        <artifactId>commons-lang</artifactId>        <version>${commons-lang2.version}</version>      </dependency>      <dependency>        <groupId>commons-io</groupId>        <artifactId>commons-io</artifactId>        <version>${commons-io.version}</version>      </dependency>      <dependency>        <groupId>commons-codec</groupId>        <artifactId>commons-codec</artifactId>        <version>${commons-codec.version}</version>      </dependency>      <dependency>        <groupId>org.apache.commons</groupId>        <artifactId>commons-math3</artifactId>        <version>${commons.math3.version}</version>      </dependency>      <dependency>        <groupId>commons-collections</groupId>        <artifactId>commons-collections</artifactId>        <version>${commons.collections.version}</version>      </dependency>      <dependency>        <groupId>org.apache.ivy</groupId>        <artifactId>ivy</artifactId>        <version>${ivy.version}</version>      </dependency>      <dependency>        <groupId>com.google.code.findbugs</groupId>        <artifactId>jsr305</artifactId>        <version>${jsr305.version}</version>      </dependency>      <dependency>        <groupId>commons-httpclient</groupId>        <artifactId>commons-httpclient</artifactId>        <version>${httpclient.classic.version}</version>      </dependency>      <dependency>        <groupId>org.apache.httpcomponents</groupId>        <artifactId>httpclient</artifactId>        <version>${commons.httpclient.version}</version>      </dependency>      <dependency>        <groupId>org.apache.httpcomponents</groupId>        <artifactId>httpmime</artifactId>        <version>${commons.httpclient.version}</version>      </dependency>      <dependency>        <groupId>org.apache.httpcomponents</groupId>        <artifactId>httpcore</artifactId>        <version>${commons.httpcore.version}</version>      </dependency>      <dependency>        <groupId>org.seleniumhq.selenium</groupId>        <artifactId>selenium-java</artifactId>        <version>${selenium.version}</version>        <scope>test</scope>        <exclusions>          <exclusion>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>          </exclusion>          <exclusion>            <groupId>io.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.seleniumhq.selenium</groupId>        <artifactId>selenium-htmlunit-driver</artifactId>        <version>${selenium.version}</version>        <scope>test</scope>      </dependency>      <!-- Added for selenium only, and should match its dependent version: -->      <dependency>        <groupId>xml-apis</groupId>        <artifactId>xml-apis</artifactId>        <version>1.4.01</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.slf4j</groupId>        <artifactId>slf4j-api</artifactId>        <version>${slf4j.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.slf4j</groupId>        <artifactId>slf4j-log4j12</artifactId>        <version>${slf4j.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.slf4j</groupId>        <artifactId>jul-to-slf4j</artifactId>        <version>${slf4j.version}</version>      </dependency>      <dependency>        <groupId>org.slf4j</groupId>        <artifactId>jcl-over-slf4j</artifactId>        <version>${slf4j.version}</version>        <!-- <scope>runtime</scope> --> <!-- more correct, but scalac 2.10.3 doesn't like it -->      </dependency>      <dependency>        <groupId>log4j</groupId>        <artifactId>log4j</artifactId>        <version>${log4j.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>com.ning</groupId>        <artifactId>compress-lzf</artifactId>        <version>1.0.3</version>      </dependency>      <dependency>        <groupId>org.xerial.snappy</groupId>        <artifactId>snappy-java</artifactId>        <version>${snappy.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>net.jpountz.lz4</groupId>        <artifactId>lz4</artifactId>        <version>1.3.0</version>      </dependency>      <dependency>        <groupId>com.clearspring.analytics</groupId>        <artifactId>stream</artifactId>        <version>2.7.0</version>        <exclusions>          <!-- Only HyperLogLogPlus is used, which doesn't depend on fastutil -->          <exclusion>            <groupId>it.unimi.dsi</groupId>            <artifactId>fastutil</artifactId>          </exclusion>        </exclusions>      </dependency>      <!-- In theory we need not directly depend on protobuf since Spark does not directly           use it. However, when building with Hadoop/YARN 2.2 Maven doesn't correctly bump           the protobuf version up from the one Mesos gives. For now we include this variable           to explicitly bump the version when building with YARN. It would be nice to figure           out why Maven can't resolve this correctly (like SBT does). -->      <dependency>        <groupId>com.google.protobuf</groupId>        <artifactId>protobuf-java</artifactId>        <version>${protobuf.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.apache.mesos</groupId>        <artifactId>mesos</artifactId>        <version>${mesos.version}</version>        <classifier>${mesos.classifier}</classifier>        <exclusions>          <exclusion>            <groupId>com.google.protobuf</groupId>            <artifactId>protobuf-java</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.roaringbitmap</groupId>        <artifactId>RoaringBitmap</artifactId>        <version>0.5.11</version>      </dependency>      <dependency>        <groupId>commons-net</groupId>        <artifactId>commons-net</artifactId>        <version>2.2</version>      </dependency>      <dependency>        <groupId>io.netty</groupId>        <artifactId>netty-all</artifactId>        <version>4.0.29.Final</version>      </dependency>      <dependency>        <groupId>io.netty</groupId>        <artifactId>netty</artifactId>        <version>3.8.0.Final</version>      </dependency>      <dependency>        <groupId>org.apache.derby</groupId>        <artifactId>derby</artifactId>        <version>${derby.version}</version>      </dependency>      <dependency>        <groupId>io.dropwizard.metrics</groupId>        <artifactId>metrics-core</artifactId>        <version>${codahale.metrics.version}</version>      </dependency>      <dependency>        <groupId>io.dropwizard.metrics</groupId>        <artifactId>metrics-jvm</artifactId>        <version>${codahale.metrics.version}</version>      </dependency>      <dependency>        <groupId>io.dropwizard.metrics</groupId>        <artifactId>metrics-json</artifactId>        <version>${codahale.metrics.version}</version>      </dependency>      <dependency>        <groupId>io.dropwizard.metrics</groupId>        <artifactId>metrics-ganglia</artifactId>        <version>${codahale.metrics.version}</version>      </dependency>      <dependency>        <groupId>io.dropwizard.metrics</groupId>        <artifactId>metrics-graphite</artifactId>        <version>${codahale.metrics.version}</version>      </dependency>      <dependency>        <groupId>com.fasterxml.jackson.core</groupId>        <artifactId>jackson-databind</artifactId>        <version>${fasterxml.jackson.version}</version>      </dependency>      <dependency>        <groupId>com.fasterxml.jackson.core</groupId>        <artifactId>jackson-annotations</artifactId>        <version>${fasterxml.jackson.version}</version>      </dependency>      <!-- Guava is excluded because of SPARK-6149.  The Guava version referenced in this module is           15.0, which causes runtime incompatibility issues. -->      <dependency>        <groupId>com.fasterxml.jackson.module</groupId>        <artifactId>jackson-module-scala_${scala.binary.version}</artifactId>        <version>${fasterxml.jackson.version}</version>        <exclusions>          <exclusion>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>com.fasterxml.jackson.module</groupId>        <artifactId>jackson-module-jaxb-annotations</artifactId>        <version>${fasterxml.jackson.version}</version>      </dependency>      <dependency>        <groupId>org.glassfish.jersey.core</groupId>        <artifactId>jersey-server</artifactId>        <version>${jersey.version}</version>      </dependency>      <dependency>        <groupId>org.glassfish.jersey.core</groupId>        <artifactId>jersey-common</artifactId>        <version>${jersey.version}</version>      </dependency>      <dependency>        <groupId>org.glassfish.jersey.core</groupId>        <artifactId>jersey-client</artifactId>        <version>${jersey.version}</version>      </dependency>      <dependency>        <groupId>org.glassfish.jersey.containers</groupId>        <artifactId>jersey-container-servlet</artifactId>        <version>${jersey.version}</version>      </dependency>      <dependency>        <groupId>org.glassfish.jersey.containers</groupId>        <artifactId>jersey-container-servlet-core</artifactId>        <version>${jersey.version}</version>      </dependency>      <dependency>        <groupId>org.glassfish.jersey</groupId>        <artifactId>jersey-client</artifactId>        <version>${jersey.version}</version>      </dependency>      <dependency>        <groupId>javax.ws.rs</groupId>        <artifactId>javax.ws.rs-api</artifactId>        <version>2.0.1</version>      </dependency>      <dependency>        <groupId>org.scalanlp</groupId>        <artifactId>breeze_${scala.binary.version}</artifactId>        <version>0.11.2</version>        <exclusions>          <!-- This is included as a compile-scoped dependency by jtransforms, which is               a dependency of breeze. -->          <exclusion>            <groupId>junit</groupId>            <artifactId>junit</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.commons</groupId>            <artifactId>commons-math3</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.json4s</groupId>        <artifactId>json4s-jackson_${scala.binary.version}</artifactId>        <version>3.2.11</version>      </dependency>      <dependency>        <groupId>org.scala-lang</groupId>        <artifactId>scala-compiler</artifactId>        <version>${scala.version}</version>      </dependency>      <dependency>        <groupId>org.scala-lang</groupId>        <artifactId>scala-reflect</artifactId>        <version>${scala.version}</version>      </dependency>      <dependency>        <groupId>org.scala-lang</groupId>        <artifactId>scala-library</artifactId>        <version>${scala.version}</version>      </dependency>      <dependency>        <groupId>org.scala-lang</groupId>        <artifactId>scala-actors</artifactId>        <version>${scala.version}</version>      </dependency>      <dependency>        <groupId>org.scala-lang</groupId>        <artifactId>scalap</artifactId>        <version>${scala.version}</version>      </dependency>      <dependency>        <groupId>org.scalatest</groupId>        <artifactId>scalatest_${scala.binary.version}</artifactId>        <version>2.2.6</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.mockito</groupId>        <artifactId>mockito-core</artifactId>        <version>1.10.19</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.scalacheck</groupId>        <artifactId>scalacheck_${scala.binary.version}</artifactId>        <version>1.12.5</version> <!-- 1.13.0 appears incompatible with scalatest 2.2.6 -->        <scope>test</scope>      </dependency>      <dependency>        <groupId>junit</groupId>        <artifactId>junit</artifactId>        <version>4.12</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.hamcrest</groupId>        <artifactId>hamcrest-core</artifactId>        <version>1.3</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.hamcrest</groupId>        <artifactId>hamcrest-library</artifactId>        <version>1.3</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>com.novocode</groupId>        <artifactId>junit-interface</artifactId>        <version>0.11</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>com.spotify</groupId>        <artifactId>docker-client</artifactId>        <classifier>shaded</classifier>        <version>3.6.6</version>        <scope>test</scope>        <exclusions>          <exclusion>            <artifactId>guava</artifactId>            <groupId>com.google.guava</groupId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>mysql</groupId>        <artifactId>mysql-connector-java</artifactId>        <version>5.1.38</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.postgresql</groupId>        <artifactId>postgresql</artifactId>        <version>9.4.1207.jre7</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.apache.curator</groupId>        <artifactId>curator-recipes</artifactId>        <version>${curator.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>jline</groupId>            <artifactId>jline</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.curator</groupId>        <artifactId>curator-client</artifactId>        <version>${curator.version}</version>      </dependency>      <dependency>        <groupId>org.apache.curator</groupId>        <artifactId>curator-framework</artifactId>        <version>${curator.version}</version>      </dependency>      <dependency>        <groupId>org.apache.curator</groupId>        <artifactId>curator-test</artifactId>        <version>${curator.version}</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.apache.hadoop</groupId>        <artifactId>hadoop-client</artifactId>        <version>${hadoop.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.codehaus.jackson</groupId>            <artifactId>jackson-mapper-asl</artifactId>          </exclusion>          <exclusion>            <groupId>org.ow2.asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>org.mockito</groupId>            <artifactId>mockito-all</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>servlet-api-2.5</artifactId>          </exclusion>          <exclusion>            <groupId>javax.servlet</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>junit</groupId>            <artifactId>junit</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.jersey-test-framework</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.contribs</groupId>            <artifactId>*</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.hadoop</groupId>        <artifactId>hadoop-minicluster</artifactId>        <version>${hadoop.version}</version>      </dependency>      <dependency>        <groupId>org.apache.avro</groupId>        <artifactId>avro</artifactId>        <version>${avro.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.apache.avro</groupId>        <artifactId>avro-ipc</artifactId>        <version>${avro.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>io.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>jetty</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>jetty-util</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.velocity</groupId>            <artifactId>velocity</artifactId>          </exclusion>        </exclusions>      </dependency>      <!-- avro-mapred for some reason depends on avro-ipc's test jar, so undo that. -->      <dependency>        <groupId>org.apache.avro</groupId>        <artifactId>avro-ipc</artifactId>        <classifier>tests</classifier>        <version>${avro.version}</version>        <scope>test</scope>      </dependency>      <dependency>        <groupId>org.apache.avro</groupId>        <artifactId>avro-mapred</artifactId>        <version>${avro.version}</version>        <classifier>${avro.mapred.classifier}</classifier>        <scope>${hive.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>io.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>jetty</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>jetty-util</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.velocity</groupId>            <artifactId>velocity</artifactId>          </exclusion>        </exclusions>      </dependency>      <!-- See SPARK-1556 for info on this dependency: -->      <dependency>        <groupId>net.java.dev.jets3t</groupId>        <artifactId>jets3t</artifactId>        <version>${jets3t.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.hadoop</groupId>        <artifactId>hadoop-yarn-api</artifactId>        <version>${yarn.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>javax.servlet</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.ow2.asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.jersey-test-framework</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.contribs</groupId>            <artifactId>*</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.hadoop</groupId>        <artifactId>hadoop-yarn-common</artifactId>        <version>${yarn.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.ow2.asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>javax.servlet</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.jersey-test-framework</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.contribs</groupId>            <artifactId>*</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.hadoop</groupId>        <artifactId>hadoop-yarn-server-tests</artifactId>        <version>${yarn.version}</version>        <classifier>tests</classifier>        <scope>test</scope>        <exclusions>          <exclusion>            <groupId>asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.ow2.asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>javax.servlet</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.jersey-test-framework</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.contribs</groupId>            <artifactId>*</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.hadoop</groupId>        <artifactId>hadoop-yarn-server-web-proxy</artifactId>        <version>${yarn.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.ow2.asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>javax.servlet</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.jersey-test-framework</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.contribs</groupId>            <artifactId>*</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.hadoop</groupId>        <artifactId>hadoop-yarn-client</artifactId>        <version>${yarn.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.ow2.asm</groupId>            <artifactId>asm</artifactId>          </exclusion>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>javax.servlet</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.jersey-test-framework</groupId>            <artifactId>*</artifactId>          </exclusion>          <exclusion>            <groupId>com.sun.jersey.contribs</groupId>            <artifactId>*</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.zookeeper</groupId>        <artifactId>zookeeper</artifactId>        <version>${zookeeper.version}</version>        <scope>${hadoop.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>org.jboss.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.codehaus.jackson</groupId>        <artifactId>jackson-core-asl</artifactId>        <version>${codehaus.jackson.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.codehaus.jackson</groupId>        <artifactId>jackson-mapper-asl</artifactId>        <version>${codehaus.jackson.version}</version>        <scope>${hadoop.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.codehaus.jackson</groupId>        <artifactId>jackson-xc</artifactId>        <version>${codehaus.jackson.version}</version>      </dependency>      <dependency>        <groupId>org.codehaus.jackson</groupId>        <artifactId>jackson-jaxrs</artifactId>        <version>${codehaus.jackson.version}</version>      </dependency>      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-beeline</artifactId>        <version>${hive.version}</version>        <scope>${hive.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-common</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-exec</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-jdbc</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-metastore</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-service</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-shims</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>          <exclusion>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-cli</artifactId>        <version>${hive.version}</version>        <scope>${hive.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-common</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-exec</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-jdbc</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-metastore</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-serde</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-service</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-shims</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>          <exclusion>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-common</artifactId>        <version>${hive.version}</version>        <scope>${hive.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-shims</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.ant</groupId>            <artifactId>ant</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.zookeeper</groupId>            <artifactId>zookeeper</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>          <exclusion>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-exec</artifactId>        <!--                <classifier>core</classifier>        -->        <version>${hive.version}</version>        <scope>${hive.deps.scope}</scope>        <exclusions>          <!-- pull this in when needed; the explicit definition culls the surplis-->          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-metastore</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-shims</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-ant</artifactId>          </exclusion>          <!-- break the loop -->          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>spark-client</artifactId>          </exclusion>          <!-- excluded dependencies & transitive.           Some may be needed to be explicitly included-->          <exclusion>            <groupId>ant</groupId>            <artifactId>ant</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.ant</groupId>            <artifactId>ant</artifactId>          </exclusion>          <exclusion>            <groupId>com.esotericsoftware.kryo</groupId>            <artifactId>kryo</artifactId>          </exclusion>          <exclusion>            <groupId>commons-codec</groupId>            <artifactId>commons-codec</artifactId>          </exclusion>          <exclusion>            <groupId>commons-httpclient</groupId>            <artifactId>commons-httpclient</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.avro</groupId>            <artifactId>avro-mapred</artifactId>          </exclusion>          <!--  this is needed and must be explicitly included later-->          <exclusion>            <groupId>org.apache.calcite</groupId>            <artifactId>calcite-core</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.curator</groupId>            <artifactId>apache-curator</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.curator</groupId>            <artifactId>curator-client</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.curator</groupId>            <artifactId>curator-framework</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libfb303</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.zookeeper</groupId>            <artifactId>zookeeper</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>          <exclusion>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>org.codehaus.groovy</groupId>            <artifactId>groovy-all</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-jdbc</artifactId>        <version>${hive.version}</version>        <exclusions>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-common</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-common</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-metastore</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-serde</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-service</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-shims</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.curator</groupId>            <artifactId>curator-framework</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libfb303</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.zookeeper</groupId>            <artifactId>zookeeper</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>          <exclusion>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>org.codehaus.groovy</groupId>            <artifactId>groovy-all</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-metastore</artifactId>        <version>${hive.version}</version>        <scope>${hive.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-serde</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-shims</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libfb303</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>          <exclusion>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-serde</artifactId>        <version>${hive.version}</version>        <scope>${hive.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-common</artifactId>          </exclusion>          <exclusion>            <groupId>${hive.group}</groupId>            <artifactId>hive-shims</artifactId>          </exclusion>          <exclusion>            <groupId>commons-codec</groupId>            <artifactId>commons-codec</artifactId>          </exclusion>          <exclusion>            <groupId>com.google.code.findbugs</groupId>            <artifactId>jsr305</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.avro</groupId>            <artifactId>avro</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libfb303</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>          <exclusion>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>org.codehaus.groovy</groupId>            <artifactId>groovy-all</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>net.sf.jpam</groupId>        <artifactId>jpam</artifactId>        <scope>${hive.deps.scope}</scope>        <version>${jpam.version}</version>        <exclusions>          <exclusion>            <groupId>javax.servlet</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>        </exclusions>      </dependency>      <!-- hive shims pulls in hive 0.23 and a transitive dependency of the Hadoop version        Hive was built against. This dependency cuts out the YARN/hadoop dependency, which        is needed by Hive to submit work to a YARN cluster.-->      <dependency>        <groupId>${hive.group}</groupId>        <artifactId>hive-shims</artifactId>        <version>${hive.version}</version>        <scope>${hive.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.hadoop</groupId>            <artifactId>hadoop-yarn-server-resourcemanager</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.curator</groupId>            <artifactId>curator-framework</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.zookeeper</groupId>            <artifactId>zookeeper</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-log4j12</artifactId>          </exclusion>          <exclusion>            <groupId>log4j</groupId>            <artifactId>log4j</artifactId>          </exclusion>          <exclusion>            <groupId>commons-logging</groupId>            <artifactId>commons-logging</artifactId>          </exclusion>          <exclusion>            <groupId>org.codehaus.groovy</groupId>            <artifactId>groovy-all</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.parquet</groupId>        <artifactId>parquet-column</artifactId>        <version>${parquet.version}</version>        <scope>${parquet.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.apache.parquet</groupId>        <artifactId>parquet-hadoop</artifactId>        <version>${parquet.version}</version>        <scope>${parquet.deps.scope}</scope>      </dependency>      <dependency>        <groupId>org.apache.parquet</groupId>        <artifactId>parquet-avro</artifactId>        <version>${parquet.version}</version>        <scope>${parquet.test.deps.scope}</scope>      </dependency>      <dependency>        <groupId>com.twitter</groupId>        <artifactId>parquet-hadoop-bundle</artifactId>        <version>${hive.parquet.version}</version>        <scope>compile</scope>      </dependency>      <dependency>        <groupId>org.apache.flume</groupId>        <artifactId>flume-ng-core</artifactId>        <version>${flume.version}</version>        <scope>${flume.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>io.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.flume</groupId>            <artifactId>flume-ng-auth</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>          <exclusion>            <groupId>org.mortbay.jetty</groupId>            <artifactId>servlet-api</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.flume</groupId>        <artifactId>flume-ng-sdk</artifactId>        <version>${flume.version}</version>        <scope>${flume.deps.scope}</scope>        <exclusions>          <exclusion>            <groupId>io.netty</groupId>            <artifactId>netty</artifactId>          </exclusion>          <exclusion>            <groupId>org.apache.thrift</groupId>            <artifactId>libthrift</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.calcite</groupId>        <artifactId>calcite-core</artifactId>        <version>${calcite.version}</version>        <exclusions>          <exclusion>            <groupId>com.fasterxml.jackson.core</groupId>            <artifactId>jackson-annotations</artifactId>          </exclusion>          <exclusion>            <groupId>com.fasterxml.jackson.core</groupId>            <artifactId>jackson-core</artifactId>          </exclusion>          <exclusion>            <groupId>com.fasterxml.jackson.core</groupId>            <artifactId>jackson-databind</artifactId>          </exclusion>          <exclusion>            <groupId>com.google.guava</groupId>            <artifactId>guava</artifactId>          </exclusion>          <exclusion>            <groupId>com.google.code.findbugs</groupId>            <artifactId>jsr305</artifactId>          </exclusion>          <exclusion>            <groupId>org.codehaus.janino</groupId>            <artifactId>janino</artifactId>          </exclusion>          <!-- hsqldb interferes with the use of derby as the default db            in hive's use of datanucleus.          -->          <exclusion>            <groupId>org.hsqldb</groupId>            <artifactId>hsqldb</artifactId>          </exclusion>          <exclusion>            <groupId>org.pentaho</groupId>            <artifactId>pentaho-aggdesigner-algorithm</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.calcite</groupId>        <artifactId>calcite-avatica</artifactId>        <version>${calcite.version}</version>        <exclusions>          <exclusion>            <groupId>com.fasterxml.jackson.core</groupId>            <artifactId>jackson-annotations</artifactId>          </exclusion>          <exclusion>            <groupId>com.fasterxml.jackson.core</groupId>            <artifactId>jackson-core</artifactId>          </exclusion>          <exclusion>            <groupId>com.fasterxml.jackson.core</groupId>            <artifactId>jackson-databind</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.codehaus.janino</groupId>        <artifactId>janino</artifactId>        <version>${janino.version}</version>      </dependency>      <dependency>        <groupId>joda-time</groupId>        <artifactId>joda-time</artifactId>        <version>${joda.version}</version>      </dependency>      <dependency>        <groupId>org.jodd</groupId>        <artifactId>jodd-core</artifactId>        <version>${jodd.version}</version>      </dependency>      <dependency>        <groupId>org.datanucleus</groupId>        <artifactId>datanucleus-core</artifactId>        <version>${datanucleus-core.version}</version>      </dependency>      <dependency>        <groupId>org.apache.thrift</groupId>        <artifactId>libthrift</artifactId>        <version>${libthrift.version}</version>        <exclusions>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.apache.thrift</groupId>        <artifactId>libfb303</artifactId>        <version>${libthrift.version}</version>        <exclusions>          <exclusion>            <groupId>org.slf4j</groupId>            <artifactId>slf4j-api</artifactId>          </exclusion>        </exclusions>      </dependency>      <dependency>        <groupId>org.antlr</groupId>        <artifactId>antlr4-runtime</artifactId>        <version>${antlr4.version}</version>      </dependency>    </dependencies>  </dependencyManagement>  <build>    <pluginManagement>      <plugins>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-enforcer-plugin</artifactId>          <version>1.4.1</version>          <executions>            <execution>              <id>enforce-versions</id>              <goals>                <goal>enforce</goal>              </goals>              <configuration>                <rules>                  <requireMavenVersion>                    <version>${maven.version}</version>                  </requireMavenVersion>                  <requireJavaVersion>                    <version>${java.version}</version>                  </requireJavaVersion>                  <bannedDependencies>                    <excludes>                      <!--                        Akka depends on io.netty:netty, which puts classes under the org.jboss.netty                        package. This conflicts with the classes in org.jboss.netty:netty                        artifact, so we have to ban that artifact here. In Netty 4.x, the classes                        are under the io.netty package, so it's fine for us to depend on both                        io.netty:netty and io.netty:netty-all.                      -->                      <exclude>org.jboss.netty</exclude>                      <exclude>org.codehaus.groovy</exclude>                    </excludes>                    <searchTransitive>true</searchTransitive>                  </bannedDependencies>                </rules>              </configuration>            </execution>          </executions>        </plugin>        <plugin>          <groupId>org.codehaus.mojo</groupId>          <artifactId>build-helper-maven-plugin</artifactId>          <version>1.10</version>        </plugin>        <plugin>          <groupId>net.alchim31.maven</groupId>          <artifactId>scala-maven-plugin</artifactId>          <version>3.2.2</version>          <executions>            <execution>              <id>eclipse-add-source</id>              <goals>                <goal>add-source</goal>              </goals>            </execution>            <execution>              <id>scala-compile-first</id>              <phase>process-resources</phase>              <goals>                <goal>compile</goal>              </goals>            </execution>            <execution>              <id>scala-test-compile-first</id>              <phase>process-test-resources</phase>              <goals>                <goal>testCompile</goal>              </goals>            </execution>            <execution>              <id>attach-scaladocs</id>              <phase>verify</phase>              <goals>                <goal>doc-jar</goal>              </goals>            </execution>          </executions>          <configuration>            <scalaVersion>${scala.version}</scalaVersion>            <recompileMode>incremental</recompileMode>            <useZincServer>true</useZincServer>            <args>              <arg>-unchecked</arg>              <arg>-deprecation</arg>              <arg>-feature</arg>            </args>            <jvmArgs>              <jvmArg>-Xms1024m</jvmArg>              <jvmArg>-Xmx1024m</jvmArg>              <jvmArg>-XX:PermSize=${PermGen}</jvmArg>              <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>              <jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>            </jvmArgs>            <javacArgs>              <javacArg>-source</javacArg>              <javacArg>${java.version}</javacArg>              <javacArg>-target</javacArg>              <javacArg>${java.version}</javacArg>              <javacArg>-Xlint:all,-serial,-path</javacArg>            </javacArgs>          </configuration>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-compiler-plugin</artifactId>          <version>3.5.1</version>          <configuration>            <source>${java.version}</source>            <target>${java.version}</target>            <encoding>UTF-8</encoding>            <maxmem>1024m</maxmem>            <fork>true</fork>            <compilerArgs>              <arg>-Xlint:all,-serial,-path</arg>            </compilerArgs>          </configuration>          <executions>            <execution>              <phase>compile</phase>              <goals>                <goal>compile</goal>              </goals>            </execution>          </executions>        </plugin>        <plugin>          <groupId>org.antlr</groupId>          <artifactId>antlr4-maven-plugin</artifactId>          <version>${antlr4.version}</version>        </plugin>        <!-- Surefire runs all Java tests -->        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-surefire-plugin</artifactId>          <version>2.19.1</version>          <!-- Note config is repeated in scalatest config -->          <configuration>            <testSourceDirectory>/src/test/java/</testSourceDirectory>            <includes>              <include>**/Test*.java</include>              <include>**/*Test.java</include>              <include>**/*TestCase.java</include>              <include>**/*Suite.java</include>            </includes>            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>            <argLine>-Xmx3g -Xss4096k -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=512m</argLine>            <environmentVariables>              <!--                Setting SPARK_DIST_CLASSPATH is a simple way to make sure any child processes                launched by the tests have access to the correct test-time classpath.              -->              <SPARK_DIST_CLASSPATH>${project.build.directory}</SPARK_DIST_CLASSPATH>              <SPARK_PREPEND_CLASSES>1</SPARK_PREPEND_CLASSES>              <SPARK_SCALA_VERSION>${scala.binary.version}</SPARK_SCALA_VERSION>              <SPARK_TESTING>1</SPARK_TESTING>              <JAVA_HOME>${test.java.home}</JAVA_HOME>            </environmentVariables>            <systemProperties>              <log4j.configuration>file:src/test/resources/log4j.properties</log4j.configuration>              <derby.system.durability>test</derby.system.durability>              <java.awt.headless>true</java.awt.headless>              <java.io.tmpdir>${project.build.directory}/tmp</java.io.tmpdir>              <spark.test.home>${spark.test.home}</spark.test.home>              <spark.testing>1</spark.testing>              <spark.master.rest.enabled>false</spark.master.rest.enabled>              <spark.ui.enabled>false</spark.ui.enabled>              <spark.ui.showConsoleProgress>false</spark.ui.showConsoleProgress>              <spark.unsafe.exceptionOnMemoryLeak>true</spark.unsafe.exceptionOnMemoryLeak>              <!-- Needed by sql/hive tests. -->              <test.src.tables>src</test.src.tables>            </systemProperties>            <failIfNoTests>false</failIfNoTests>            <excludedGroups>${test.exclude.tags}</excludedGroups>          </configuration>          <executions>            <execution>              <id>test</id>              <goals>                <goal>test</goal>              </goals>            </execution>          </executions>        </plugin>        <!-- Scalatest runs all Scala tests -->        <plugin>          <groupId>org.scalatest</groupId>          <artifactId>scalatest-maven-plugin</artifactId>          <version>1.0</version>          <!-- Note config is repeated in surefire config -->          <configuration>            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>            <junitxml>.</junitxml>            <filereports>RichSparkTestSuite.txt</filereports>            <argLine>-ea -Xmx3g -XX:MaxPermSize=${MaxPermGen} -XX:ReservedCodeCacheSize=${CodeCacheSize}</argLine>            <stderr/>            <environmentVariables>              <!--                Setting SPARK_DIST_CLASSPATH is a simple way to make sure any child processes                launched by the tests have access to the correct test-time classpath.              -->              <SPARK_DIST_CLASSPATH>${project.build.directory}</SPARK_DIST_CLASSPATH>              <SPARK_PREPEND_CLASSES>1</SPARK_PREPEND_CLASSES>              <SPARK_SCALA_VERSION>${scala.binary.version}</SPARK_SCALA_VERSION>              <SPARK_TESTING>1</SPARK_TESTING>              <JAVA_HOME>${test.java.home}</JAVA_HOME>            </environmentVariables>            <systemProperties>              <log4j.configuration>file:src/test/resources/log4j.properties</log4j.configuration>              <derby.system.durability>test</derby.system.durability>              <java.awt.headless>true</java.awt.headless>              <java.io.tmpdir>${project.build.directory}/tmp</java.io.tmpdir>              <spark.test.home>${spark.test.home}</spark.test.home>              <spark.testing>1</spark.testing>              <spark.ui.enabled>false</spark.ui.enabled>              <spark.ui.showConsoleProgress>false</spark.ui.showConsoleProgress>              <spark.unsafe.exceptionOnMemoryLeak>true</spark.unsafe.exceptionOnMemoryLeak>              <!-- Needed by sql/hive tests. -->              <test.src.tables>__not_used__</test.src.tables>            </systemProperties>            <tagsToExclude>${test.exclude.tags}</tagsToExclude>          </configuration>          <executions>            <execution>              <id>test</id>              <goals>                <goal>test</goal>              </goals>            </execution>          </executions>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-jar-plugin</artifactId>          <version>2.6</version>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-antrun-plugin</artifactId>          <version>${maven-antrun.version}</version>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-source-plugin</artifactId>          <version>2.4</version>          <configuration>            <attach>true</attach>          </configuration>          <executions>            <execution>              <id>create-source-jar</id>              <goals>                <goal>jar-no-fork</goal>                <goal>test-jar-no-fork</goal>              </goals>            </execution>          </executions>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-clean-plugin</artifactId>          <version>3.0.0</version>          <configuration>            <filesets>              <fileset>                <directory>work</directory>              </fileset>              <fileset>                <directory>checkpoint</directory>              </fileset>              <fileset>                <directory>lib_managed</directory>              </fileset>            </filesets>          </configuration>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-javadoc-plugin</artifactId>          <version>2.10.3</version>        </plugin>        <plugin>          <groupId>org.codehaus.mojo</groupId>          <artifactId>exec-maven-plugin</artifactId>          <version>1.4.0</version>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-assembly-plugin</artifactId>          <version>2.6</version>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-shade-plugin</artifactId>          <version>2.4.3</version>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-install-plugin</artifactId>          <version>2.5.2</version>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-deploy-plugin</artifactId>          <version>2.8.2</version>        </plugin>        <plugin>          <groupId>org.apache.maven.plugins</groupId>          <artifactId>maven-dependency-plugin</artifactId>          <executions>            <execution>              <id>default-cli</id>              <goals>                <goal>build-classpath</goal>              </goals>              <configuration>                <!-- This includes dependencies with 'runtime' and 'compile' scopes;                     see the docs for includeScope for more details -->                <includeScope>runtime</includeScope>              </configuration>            </execution>          </executions>        </plugin>        <!-- This plugin's configuration is used to store Eclipse m2e settings only. -->        <!-- It has no influence on the Maven build itself. -->        <plugin>          <groupId>org.eclipse.m2e</groupId>          <artifactId>lifecycle-mapping</artifactId>          <version>1.0.0</version>          <configuration>            <lifecycleMappingMetadata>              <pluginExecutions>                <pluginExecution>                  <pluginExecutionFilter>                    <groupId>org.apache.maven.plugins</groupId>                    <artifactId>maven-dependency-plugin</artifactId>                    <versionRange>[2.8,)</versionRange>                    <goals>                      <goal>build-classpath</goal>                    </goals>                  </pluginExecutionFilter>                  <action>                    <ignore></ignore>                  </action>                </pluginExecution>                <pluginExecution>                  <pluginExecutionFilter>                    <groupId>org.apache.maven.plugins</groupId>                    <artifactId>maven-jar-plugin</artifactId>                    <versionRange>[2.6,)</versionRange>                    <goals>                      <goal>test-jar</goal>                    </goals>                  </pluginExecutionFilter>                  <action>                    <ignore></ignore>                  </action>                </pluginExecution>                <pluginExecution>                  <pluginExecutionFilter>                    <groupId>org.apache.maven.plugins</groupId>                    <artifactId>maven-antrun-plugin</artifactId>                    <versionRange>[${maven-antrun.version},)</versionRange>                    <goals>                      <goal>run</goal>                    </goals>                  </pluginExecutionFilter>                  <action>                    <ignore></ignore>                  </action>                </pluginExecution>              </pluginExecutions>            </lifecycleMappingMetadata>          </configuration>        </plugin>      </plugins>    </pluginManagement>    <plugins>      <plugin>        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-compiler-plugin</artifactId>      </plugin>      <!--<plugin>-->        <!--<groupId>org.apache.maven.plugins</groupId>-->        <!--<artifactId>maven-assembly-plugin</artifactId>-->        <!--<configuration>-->          <!--<descriptorRefs>-->            <!--<descriptorRef>jar-with-dependencies</descriptorRef>-->          <!--</descriptorRefs>-->        <!--</configuration>-->        <!--<executions>-->          <!--<execution>-->            <!--<phase>package</phase>-->            <!--<goals>-->              <!--<goal>single</goal>-->            <!--</goals>-->          <!--</execution>-->        <!--</executions>-->      <!--</plugin>-->      <plugin>        <groupId>org.codehaus.mojo</groupId>        <artifactId>build-helper-maven-plugin</artifactId>        <executions>          <execution>            <id>add-scala-sources</id>            <phase>generate-sources</phase>            <goals>              <goal>add-source</goal>            </goals>            <configuration>              <sources>                <source>src/main/scala</source>              </sources>            </configuration>          </execution>          <execution>            <id>add-scala-test-sources</id>            <phase>generate-test-sources</phase>            <goals>              <goal>add-test-source</goal>            </goals>            <configuration>              <sources>                <source>src/test/scala</source>              </sources>            </configuration>          </execution>          <execution>            <id>add-java-sources</id>            <phase>generate-sources</phase>            <goals>              <goal>add-source</goal>            </goals>            <configuration>              <sources>                <source>src/main/java</source>              </sources>            </configuration>          </execution>          <execution>            <id>add-java-test-sources</id>            <phase>generate-test-sources</phase>            <goals>              <goal>add-test-source</goal>            </goals>            <configuration>              <sources>                <source>src/test/java</source>              </sources>            </configuration>          </execution>        </executions>      </plugin>      <!-- This plugin dumps the test classpath into a file -->      <plugin>        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-dependency-plugin</artifactId>        <version>2.10</version>        <executions>          <execution>            <id>generate-test-classpath</id>            <phase>test-compile</phase>            <goals>              <goal>build-classpath</goal>            </goals>            <configuration>              <includeScope>test</includeScope>              <outputProperty>test_classpath</outputProperty>            </configuration>          </execution>          <execution>            <id>copy-module-dependencies</id>            <phase>${build.copyDependenciesPhase}</phase>            <goals>              <goal>copy-dependencies</goal>            </goals>            <configuration>              <includeScope>runtime</includeScope>              <outputDirectory>${jars.target.dir}</outputDirectory>            </configuration>          </execution>        </executions>      </plugin>      <!--        The shade plug-in is used here to create effective pom's (see SPARK-3812), and also        remove references from the shaded libraries from artifacts published by Spark.      -->      <!--<plugin>-->        <!--<groupId>org.apache.maven.plugins</groupId>-->        <!--<artifactId>maven-shade-plugin</artifactId>-->        <!--<configuration>-->          <!--<shadedArtifactAttached>false</shadedArtifactAttached>-->          <!--<artifactSet>-->            <!--<includes>-->              <!--<include>org.spark-project.spark:unused</include>-->              <!--<include>org.eclipse.jetty:jetty-io</include>-->              <!--<include>org.eclipse.jetty:jetty-http</include>-->              <!--<include>org.eclipse.jetty:jetty-continuation</include>-->              <!--<include>org.eclipse.jetty:jetty-servlet</include>-->              <!--<include>org.eclipse.jetty:jetty-servlets</include>-->              <!--<include>org.eclipse.jetty:jetty-plus</include>-->              <!--<include>org.eclipse.jetty:jetty-security</include>-->              <!--<include>org.eclipse.jetty:jetty-util</include>-->              <!--<include>org.eclipse.jetty:jetty-server</include>-->              <!--<include>com.google.guava:guava</include>-->            <!--</includes>-->          <!--</artifactSet>-->          <!--<relocations>-->            <!--<relocation>-->              <!--<pattern>org.eclipse.jetty</pattern>-->              <!--<shadedPattern>${spark.shade.packageName}.jetty</shadedPattern>-->              <!--<includes>-->                <!--<include>org.eclipse.jetty.**</include>-->              <!--</includes>-->            <!--</relocation>-->            <!--<relocation>-->              <!--<pattern>com.google.common</pattern>-->              <!--<shadedPattern>${spark.shade.packageName}.guava</shadedPattern>-->            <!--</relocation>-->          <!--</relocations>-->        <!--</configuration>-->        <!--<executions>-->          <!--<execution>-->            <!--<phase>package</phase>-->            <!--<goals>-->              <!--<goal>shade</goal>-->            <!--</goals>-->          <!--</execution>-->        <!--</executions>-->      <!--</plugin>-->      <plugin>        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-enforcer-plugin</artifactId>      </plugin>      <plugin>        <groupId>net.alchim31.maven</groupId>        <artifactId>scala-maven-plugin</artifactId>      </plugin>      <plugin>        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-source-plugin</artifactId>      </plugin>      <plugin>        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-antrun-plugin</artifactId>        <executions>          <execution>            <id>create-tmp-dir</id>            <phase>generate-test-resources</phase>            <goals>              <goal>run</goal>            </goals>            <configuration>              <target>                <mkdir dir="${project.build.directory}/tmp" />              </target>            </configuration>          </execution>        </executions>      </plugin>      <!-- Enable surefire and scalatest in all children, in one place: -->      <plugin>        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-surefire-plugin</artifactId>      </plugin>      <plugin>        <groupId>org.scalatest</groupId>        <artifactId>scalatest-maven-plugin</artifactId>      </plugin>      <!-- Build test-jar's for all projects, since some projects depend on tests from others -->      <plugin>        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-jar-plugin</artifactId>        <configuration>          <skipIfEmpty>true</skipIfEmpty>        </configuration>        <executions>          <execution>            <id>prepare-test-jar</id>            <phase>${build.testJarPhase}</phase>            <goals>              <goal>test-jar</goal>            </goals>            <configuration>              <excludes>                <exclude>log4j.properties</exclude>              </excludes>            </configuration>          </execution>        </executions>      </plugin>    </plugins>  </build>  <dependencies>    <dependency>      <groupId>org.apache.spark</groupId>      <artifactId>spark-core_${scala.binary.version}</artifactId>    </dependency>    <dependency>      <groupId>org.scalatest</groupId>      <artifactId>scalatest_${scala.binary.version}</artifactId>      <scope>test</scope>    </dependency>    <dependency>      <groupId>junit</groupId>      <artifactId>junit</artifactId>      <scope>test</scope>    </dependency>    <dependency>      <groupId>org.mock-server</groupId>      <artifactId>mockserver-netty</artifactId>      <version>3.10.4</version>      <scope>test</scope>    </dependency>    <dependency>      <groupId>xerces</groupId>      <artifactId>xercesImpl</artifactId>      <version>2.11.0</version>      <scope>test</scope>    </dependency>    <dependency>      <groupId>xalan</groupId>      <artifactId>xalan</artifactId>      <version>2.7.2</version>      <scope>test</scope>    </dependency>  </dependencies></project>